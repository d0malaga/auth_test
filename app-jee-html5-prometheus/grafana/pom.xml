<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>auth_test.quickstarts</groupId>
    <artifactId>app-jee-html5-prometheus</artifactId>
    <version>0.4.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>app-jee-html5-prometheus-grafana</artifactId>
  <packaging>pom</packaging>
  <name>app-jee-html5-prometheus</name>
  <description>Grafana with dashboard for app-jee-html5-prometheus</description>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <grafana_helm.version>6.1.5</grafana_helm.version>
  </properties>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>kubernetes-maven-plugin</artifactId>
        <version>${jkube.version}</version>
        <configuration>
          <helm>
	    <chart>${project.ArtifactId}</chart>
	    <keywords>prometheus</keywords>
	    <dependencies>
              <dependency>
		<name>grafana</name>
		<version>${grafana_helm.version}</version>
		<repository>https://charts.bitnami.com/bitnami</repository>
              </dependency>
	    </dependencies>
	  </helm>
	</configuration>
      </plugin>
      <!-- Couldn't get jkube to use fragments for helm values.yaml, use other plugin.
           jkube/template.yml works fine for basic settings, but did not work for:
             1. changing the name of a secret/configmap
             2. values with complex structure like mapping dashboards into grafana
      -->
      <!-- Copy files using filter to replace maven variables -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-helm-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/resources</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/kustomization</directory>
		  <includes>
		    <include>values_grafana.yaml</include>
		  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Copy files that were written by k8s:helm -->
      <plugin>
        <groupId>com.google.code.maven-replacer-plugin</groupId>
        <artifactId>replacer</artifactId>
        <version>1.5.2</version>
        <executions>
          <execution>
            <id>repair-values_yaml</id>
            <phase>integration-test</phase>
            <goals>
              <goal>replace</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <file>
            ${project.build.directory}/resources/values_grafana.yaml
          </file>
          <outputFile>
            ${project.build.directory}/jkube/helm/${project.ArtifactId}/kubernetes/values.yaml
          </outputFile>
          <variableTokenValueMap>
            %%client.artifactId%%=${project.artifactId}
          </variableTokenValueMap>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
